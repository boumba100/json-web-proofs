



todo                                                           J. Miller
                                                           Ping Identity
                                                         28 October 2021


                            JSON Proof Token
                     draft-jmiller-json-proof-token

Abstract

   JSON Proof Token (JPT) is a compact, URL-safe, privacy enabled means
   of representing claims to be transferred between three parties.  The
   claims in a JPT are encoded as JSON objects that are used as the
   payloads of a JSON Web Proof (JWP) structure, enabling the claims to
   be digitally signed and selectively disclosed.  JPTs also support
   reusability and unlinkability when using Zero-Knowledge Proofs
   (ZKPs).

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Background
   4.  Design Considerations
     4.1.  Unlinkability
     4.2.  Selective Disclosure
     4.3.  Familiarity
   5.  Layout
   6.  Payloads
     6.1.  Disclosed
     6.2.  Proofs
   7.  Security Considerations
   8.  IANA Considerations
   9.  Normative References
   10. Informative References
   Author's Address

1.  Introduction

   JSON Proof Token (JPT) is a compact claims representation format
   intended to be used in the same ways as a JWT but with additional
   support for selective disclosure and unlinkability.  JPTs encode
   claim values to be transmitted as JSON payloads of a JSON Web Proof
   (JWP).  JPTs are always represented using the JWP Compact
   Serialization.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Background

   JWP defines a clean abstraction around the parts of a container
   binding together a protected header and one or more payloads.  It
   does not define any details about how claims are organized and what
   formats the payloads are in.  JPTs are intended to be as close to a
   JWT as possible, while also supporting the selective disclosure and
   unlinkability of JWPs.

4.  Design Considerations

   Key drivers of the approach shaping JPT.

4.1.  Unlinkability

   *  reduce the complexity of issuance, less chance of accidential link
      leakage

   *  minimize the payloads

   *  reference external static structures instead of included dynamic
      ones

4.2.  Selective Disclosure

   *  holder must be able to understand all payloads to provide choice/
      consent

   *  needs to be simple to resolve exact context for each payload

4.3.  Familiarity

   Should be as easy as possible to transition from a JWT to a JPT.

5.  Layout

   *  JSON structure is external to JPT

   *  ideally embedded in JWK for ease of resolution

   *  may be known by context

   *  values can be direct references to payload indexes

   *  indirect references are app specific

   Layout definition object, using single-integer-value arrays as the
   index references to which payload:

   "jpl": {
     "email": [0],
     "name": [1],
     "exp": [2]
   }

6.  Payloads

   Application resolves each reference as required when processing the
   layout.  Resolution can result in one of three things: 1.  A
   disclosed JSON value 2.  A proof method 3.  A null value

6.1.  Disclosed

   *  all referenced directly by layout are JSON strings

   *  may be indirect references w/ non-JSON values

6.2.  Proofs

   *  proof methods can be returned instead of a disclosed payload

   *  these are generated by the algorithm from information in the JWP's
      proof value

   *  a proof method may be custom based on the capabilities of the
      algorithm

   *  define common proof method types avalable?

      -  range

      -  membership

      -  time

      -  knowledge

      -  linking

7.  Security Considerations

   *  Protected Header Minimization

8.  IANA Considerations

   This document has no IANA actions.

9.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

10.  Informative References

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

Author's Address

   Jeremie Miller
   Ping Identity

   Email: jmiller@pingidentity.com
